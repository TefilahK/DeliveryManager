{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tefil\\\\Desktop\\\\DeliveryManager\\\\DeliveryManager\\\\client\\\\src\\\\components\\\\sideBar\\\\Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport GoogleMapReact from \"google-map-react\";\nimport \"./css/marker.css\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Item, Label } from \"semantic-ui-react\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from '@material-ui/core/TextField';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport $ from \"jquery\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Fragment } from \"react\";\nimport randomColor from 'randomcolor';\nimport { google_API } from \"../../keys\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet markerList = [];\n\nconst AnyReactComponent = ({\n  text\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 41\n}, this);\n\n_c = AnyReactComponent;\n\nconst Marker = props => {\n  const {\n    color,\n    name,\n    id\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pin bounce\",\n      style: {\n        backgroundColor: color,\n        cursor: 'pointer'\n      },\n      title: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pulse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Marker;\n\nconst SimpleMap = props => {\n  _s();\n\n  const [marker, setMarker] = useState([]);\n  const [point, setpoint] = useState([]);\n  const [center, setCenter] = useState({\n    lat: 31.786362,\n    lng: 35.191316\n  });\n  const [zoom, setZoom] = useState(8);\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n  React.useEffect(() => {\n    setmarkerOnMap(new Date());\n  }, []);\n\n  function setmarkerOnMap(date) {\n    $.ajax({\n      type: \"POST\",\n      url: \"http://localhost:8080/map/getMarkermap\",\n      data: {\n        date: date,\n        email: sessionStorage.getItem(\"userEmail\")\n      }\n    }).done(function (fetchData) {\n      console.log(fetchData.packages);\n      let points = [];\n      let colors = new Object();\n      fetchData.packages.forEach(el => {\n        let color;\n\n        if (el.isSent == true) {\n          color = 'black';\n        } else {\n          if (colors[el.volunteerId] == null || colors[el.volunteerId] == undefined) {\n            color = randomColor();\n            colors[el.volunteerId] = color;\n          } else {\n            color = colors[el.volunteerId];\n          }\n        }\n\n        points.push({\n          lat: el.lat,\n          lng: el.lon,\n          label: el.address,\n          color: color\n        });\n      });\n      console.log(points);\n      setMarker(points);\n    }).fail(function (jqXhr) {\n      console.log(jqXhr);\n    });\n  }\n\n  const useStyle = makeStyles(theme => ({\n    title: {\n      fontSize: \"50px\"\n    },\n    datePicker: {\n      selectColor: '#FF72B1',\n      headerColor: '#FF72B1'\n    },\n    textField: {\n      marginLeft: theme.spacing(60),\n      marginRight: theme.spacing(1),\n      width: 200,\n      height: 100\n    }\n  }));\n  const classes = useStyle();\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n    setMarker([]);\n    setmarkerOnMap(date);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: \"100vh\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      style: {\n        color: \"black\"\n      },\n      children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n        autoOk: true,\n        variant: \"inline\",\n        inputVariant: \"outlined\",\n        label: \"Date\",\n        format: \"dd/MM/yyyy\",\n        value: selectedDate,\n        className: classes.textField,\n        InputAdornmentProps: {\n          position: \"start\"\n        },\n        onChange: date => handleDateChange(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: google_API\n      },\n      defaultCenter: center,\n      defaultZoom: zoom,\n      children: marker.map(item => /*#__PURE__*/_jsxDEV(Marker, {\n        lat: item.lat,\n        lng: item.lng,\n        label: Item.label,\n        name: \"My Marker\",\n        color: item.color\n      }, item.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleMap, \"vHZSLQsJGY+vt90TnJSde9cN0xU=\", true);\n\n_c3 = SimpleMap;\nexport default SimpleMap;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AnyReactComponent\");\n$RefreshReg$(_c2, \"Marker\");\n$RefreshReg$(_c3, \"SimpleMap\");","map":{"version":3,"sources":["C:/Users/tefil/Desktop/DeliveryManager/DeliveryManager/client/src/components/sideBar/Map.js"],"names":["React","useState","GoogleMapReact","Paper","Item","Label","GridList","GridListTile","Typography","TextField","lighten","makeStyles","$","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","Grid","DateFnsUtils","Fragment","randomColor","google_API","markerList","AnyReactComponent","text","Marker","props","color","name","id","backgroundColor","cursor","SimpleMap","marker","setMarker","point","setpoint","center","setCenter","lat","lng","zoom","setZoom","selectedDate","setSelectedDate","Date","useEffect","setmarkerOnMap","date","ajax","type","url","data","email","sessionStorage","getItem","done","fetchData","console","log","packages","points","colors","Object","forEach","el","isSent","volunteerId","undefined","push","lon","label","address","fail","jqXhr","useStyle","theme","title","fontSize","datePicker","selectColor","headerColor","textField","marginLeft","spacing","marginRight","width","height","classes","handleDateChange","position","key","map","item"],"mappings":"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","sourcesContent":["\r\nimport React, { useState  } from \"react\";\r\nimport GoogleMapReact  from \"google-map-react\";\r\nimport \"./css/marker.css\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Item, Label } from \"semantic-ui-react\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles'\r\nimport $ from \"jquery\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { Fragment } from \"react\";\r\nimport randomColor from 'randomcolor';\r\nimport {google_API} from \"../../keys\"\r\n\r\n\r\nlet markerList = [];\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nconst Marker = (props) => {\r\n  const { color, name, id } = props;\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"pin bounce\"\r\n        style={{ backgroundColor: color, cursor: 'pointer' }}\r\n        title={name}\r\n      />\r\n      <div className=\"pulse\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SimpleMap = (props) => {\r\n  const [marker, setMarker] = useState([]);\r\n  const [point, setpoint] = useState([]);\r\n  const [center, setCenter] = useState({ lat: 31.786362, lng: 35.191316 });\r\n  const [zoom, setZoom] = useState(8);\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n  React.useEffect(()=>{\r\n    setmarkerOnMap(new Date())\r\n  }, []) \r\n    function setmarkerOnMap(date){\r\n      $.ajax({\r\n        type: \"POST\",\r\n        url: \"http://localhost:8080/map/getMarkermap\", \r\n        data: {date: date ,email:sessionStorage.getItem(\"userEmail\")}\r\n      }).done( function(fetchData) {\r\n        console.log(fetchData.packages)\r\n        let points=[]\r\n        let colors=new Object();\r\n        fetchData.packages.forEach(el=>{\r\n          let color;\r\n          if(el.isSent==true){\r\n            color='black'\r\n          }\r\n          else{\r\n            if(colors[el.volunteerId]==null || colors[el.volunteerId]==undefined){\r\n              color = randomColor();\r\n              colors[el.volunteerId]=color\r\n            }else{\r\n              color=colors[el.volunteerId]\r\n            }\r\n          }\r\n          points.push({lat:el.lat, lng:el.lon, label:el.address,color:color})\r\n        })\r\n        console.log(points)\r\n        setMarker(points)\r\n      })\r\n        .fail(function(jqXhr) {\r\n          console.log(jqXhr)\r\n      })\r\n    }\r\n    \r\n  const useStyle = makeStyles((theme) => ({\r\n    title:{\r\n      fontSize:\"50px\"\r\n    },\r\n    datePicker:{\r\n      selectColor: '#FF72B1',\r\n    headerColor: '#FF72B1'\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(60),\r\n      marginRight: theme.spacing(1),\r\n      width: 200,\r\n      height:100,\r\n    },\r\n  }))\r\n  const classes = useStyle();\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    setMarker([]);\r\n    setmarkerOnMap(date)\r\n  };\r\n  return (\r\n    <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils} style={{color:\"black\"}}>\r\n       <KeyboardDatePicker\r\n        autoOk\r\n        variant=\"inline\"\r\n        inputVariant=\"outlined\"\r\n        label=\"Date\"\r\n        format=\"dd/MM/yyyy\"\r\n        value={selectedDate}\r\n        className={classes.textField}\r\n        InputAdornmentProps={{ position: \"start\" }}\r\n        onChange={date => handleDateChange(date)}\r\n      />\r\n      </MuiPickersUtilsProvider>\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: google_API }}\r\n        defaultCenter={center}\r\n        defaultZoom={zoom}\r\n      >\r\n        {marker.map((item) => (\r\n          <Marker\r\n            lat={item.lat}\r\n            lng={item.lng}\r\n            label={Item.label}\r\n            name=\"My Marker\"\r\n            color={item.color}\r\n            key={item.label}\r\n          />\r\n        ))}\r\n      </GoogleMapReact>\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n      </div>\r\n  \r\n  );\r\n};\r\n\r\nexport default SimpleMap;"]},"metadata":{},"sourceType":"module"}