{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tefil\\\\Desktop\\\\DeliveryManager\\\\DeliveryManager\\\\client\\\\src\\\\components\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Fab from '@material-ui/core/Fab';\nimport SendIcon from '@material-ui/icons/Send';\nimport { io } from \"socket.io-client\";\nimport $ from 'jquery';\nimport { useContext, useEffect, useRef } from \"react\";\nimport { MenuItem } from '@material-ui/core';\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    transition: theme.transitions.create('background-color', {\n      duration: theme.transitions.duration.shortest\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&:focus': {\n      backgroundColor: theme.palette.action.hover\n    }\n  },\n  table: {\n    minWidth: 650\n  },\n  chatSection: {\n    width: '100%',\n    height: '80vh',\n    overflow: \"auto\",\n    backgroundColor: \"#fefcfb\"\n  },\n  headBG: {\n    backgroundColor: '#e0e0e0'\n  },\n  borderRight500: {\n    borderRight: '1px solid #e0e0e0'\n  },\n  messageArea: {\n    height: '70vh',\n    overflowY: 'scroll',\n    // overflowY: \"scroll\",\n    minWidth: 0,\n    minHeight: 0,\n    backgroundImage: 'url(\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcThbLauEsjimWluP7tzvqa3hDJI74bsdjvG13bhAVvQQiUYcLTFCWqqOOKUHpjbiUUek-k&usqp=CAU\")'\n  },\n  chatBoxTop: {\n    height: \"100%\",\n    overflowY: \"scroll\",\n    paddingRight: \"10\"\n  },\n  chatBoxBottom: {\n    marginTop: \"5\",\n    // display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  chatOnlineBadge: {\n    width: \"10px\",\n    height: \"10px\",\n    borderRadius: \"50%\",\n    backgroundColor: \"limegreen\",\n    position: \"absolute\",\n    top: \"2px\",\n    right: \"2px\"\n  }\n}));\n\nconst MyChat = () => {\n  _s();\n\n  const classes = useStyles();\n  const socket = useRef();\n  const scrollRef = useRef();\n  const [currentUser, setCurrentUser] = useState([]);\n  const [receiverId, setReciverId] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState([]);\n  const [newMessage, setNewMessage] = useState([]);\n  const [selected, setSelected] = useState([]);\n  let userId = sessionStorage.getItem(\"id\");\n  useEffect(() => {\n    let unmounted = false;\n    socket.current = io(\"ws://localhost:8900\");\n    socket.current.on(\"getMessage\", data => {\n      setArrivalMessage({\n        sender: data.senderId,\n        text: data.text,\n        date: Date.now()\n      });\n      return () => {\n        unmounted = true;\n      };\n    });\n    socket.current.emit(\"addUser\", userId);\n    socket.current.emit(\"readMessages\");\n    socket.current.on(\"getUsers\", onlineUsers => {});\n  }, []);\n  useEffect(() => {\n    const getFriends = async () => {\n      $.ajax({\n        type: \"GET\",\n        url: \"http://localhost:8080/users/friends/\" + userId\n      }).done(function (res) {\n        console.log(res.data);\n        setUsers(res.data);\n        handleClickOnUser(res.data[0].id);\n      }).fail(function (jqXhr) {\n        console.log(\"cant find user by Id !!\");\n      });\n    };\n\n    getFriends();\n  }, [userId]);\n  useEffect(() => {\n    $.ajax({\n      type: \"POST\",\n      url: \"http://localhost:8080/users/getUserById\",\n      data: {\n        id: userId\n      }\n    }).done(function (user) {\n      setCurrentUser(user.user);\n    }).fail(function (jqXhr) {\n      console.log(\"cant find user by Id !!\");\n    });\n  }, []);\n  useEffect(() => {\n    let unmounted = false;\n    arrivalMessage && receiverId == arrivalMessage.sender && setMessages([...messages, arrivalMessage]);\n    return () => {\n      unmounted = true;\n    };\n  }, [arrivalMessage, receiverId]);\n\n  const handleClickOnUser = userId => {\n    //set reciver id \n    setReciverId(userId);\n    setMessages([]); //get from data base the converstaion!\n\n    $.ajax({\n      type: \"POST\",\n      url: \"http://localhost:8080/Listmessages\",\n      data: {\n        receiverId: sessionStorage.getItem(\"id\"),\n        contactId: userId\n      }\n    }).done(function (fetchData) {\n      setMessages(fetchData.data); //change color of coponenet\n\n      document.getElementById(userId).style.backgroundColor = \"gray\";\n\n      if (selected.length != 0) {\n        selected.style.backgroundColor = \"#fefcfb\";\n      }\n\n      setSelected(document.getElementById(userId));\n    }).fail(function (jqXhr) {\n      console.log(\"cant get messages !!\");\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const message = {\n      sender: userId,\n      receiver: receiverId,\n      text: newMessage,\n      date: Date.now()\n    };\n    socket.current.emit(\"sendMessage\", {\n      senderId: userId,\n      receiverId: receiverId,\n      text: newMessage\n    });\n\n    try {\n      $.ajax({\n        type: \"POST\",\n        url: \"http://localhost:8080/messages\",\n        data: message\n      }).done(function (res) {\n        setMessages([...messages, message]);\n        setNewMessage(\"\");\n      }).fail(function (jqXhr) {\n        console.log(\"cant find user by Id !!\");\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const theme = createMuiTheme({\n    overrides: {\n      MuiTableRow: {\n        \"&$selected\": {\n          backgroundColor: 'red'\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          style: {\n            fontFamily: \"cursive\",\n            marginLeft: theme.spacing(70),\n            fontSize: \"2.8rem\"\n          },\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: Paper,\n      className: classes.chatSection,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        className: classes.borderRight500,\n        children: [currentUser != null && /*#__PURE__*/_jsxDEV(List, {\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                alt: \"Remy Sharp\",\n                src: currentUser.img,\n                style: {\n                  height: theme.spacing(6),\n                  width: theme.spacing(6)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: currentUser.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 25\n            }, this)]\n          }, currentUser.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(List, {\n            children: /*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              id: user.id,\n              onClick: () => handleClickOnUser(user.id),\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: \"Remy Sharp\",\n                  src: user.img,\n                  style: {\n                    height: theme.spacing(6),\n                    width: theme.spacing(6)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 29\n              }, this), user.online == true && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.chatOnlineBadge\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 51\n              }, this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          minWidth: 0,\n          minHeight: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          className: classes.messageArea,\n          children: messages.map(message => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  align: message.sender == currentUser.id ? \"right\" : \"left\",\n                  primary: message.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  align: message.sender == currentUser.id ? \"right\" : \"left\",\n                  secondary: new Date(message.date).toLocaleDateString('en-GB')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 25\n            }, this)\n          }, new Date(message.date).toLocaleDateString('en-GB'), false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 21\n          }, this) // <br/>\n          // </div>\n          )\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            padding: '10px',\n            alignContent: \"flex-end\",\n            justifyContent: \"flex-end\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 11,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic-email\",\n              label: \"Type Something\",\n              onChange: e => setNewMessage(e.target.value),\n              value: newMessage,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            xs: 1,\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Fab, {\n              color: \"primary\",\n              \"aria-label\": \"add\",\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {\n                onClick: handleSubmit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MyChat, \"mg1F+bTstYQqgqssOnKesPvQKkc=\", false, function () {\n  return [useStyles];\n});\n\n_c = MyChat;\nexport default MyChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyChat\");","map":{"version":3,"sources":["C:/Users/tefil/Desktop/DeliveryManager/DeliveryManager/client/src/components/Chat.js"],"names":["React","useState","makeStyles","Paper","Grid","Box","Divider","TextField","Typography","List","ListItem","ListItemIcon","ListItemText","Avatar","Fab","SendIcon","io","$","useContext","useEffect","useRef","MenuItem","withStyles","MuiThemeProvider","createMuiTheme","useStyles","theme","button","transition","transitions","create","duration","shortest","textDecoration","backgroundColor","palette","action","hover","table","minWidth","chatSection","width","height","overflow","headBG","borderRight500","borderRight","messageArea","overflowY","minHeight","backgroundImage","chatBoxTop","paddingRight","chatBoxBottom","marginTop","alignItems","justifyContent","chatOnlineBadge","borderRadius","position","top","right","MyChat","classes","socket","scrollRef","currentUser","setCurrentUser","receiverId","setReciverId","messages","setMessages","users","setUsers","arrivalMessage","setArrivalMessage","newMessage","setNewMessage","selected","setSelected","userId","sessionStorage","getItem","unmounted","current","on","data","sender","senderId","text","date","Date","now","emit","onlineUsers","getFriends","ajax","type","url","done","res","console","log","handleClickOnUser","id","fail","jqXhr","user","contactId","fetchData","document","getElementById","style","length","handleSubmit","e","preventDefault","message","receiver","err","overrides","MuiTableRow","fontFamily","marginLeft","spacing","fontSize","img","name","map","username","online","display","flexDirection","toLocaleDateString","padding","alignContent","target","value"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { io } from \"socket.io-client\";\r\nimport $ from 'jquery'\r\nimport { useContext, useEffect, useRef } from \"react\";\r\nimport { MenuItem } from '@material-ui/core';\r\nimport {\r\n\twithStyles,\r\n\tMuiThemeProvider,\r\n\tcreateMuiTheme\r\n} from '@material-ui/core/styles'\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    transition: theme.transitions.create('background-color', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n      backgroundColor: theme.palette.action.hover,\r\n      // Reset on touch devices, it doesn't add specificity\r\n      '@media (hover: none)': {\r\n        backgroundColor: 'transparent',\r\n      },\r\n    },\r\n    '&:focus': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  chatSection: {\r\n    width: '100%',\r\n    height: '80vh',\r\n    overflow:\"auto\",\r\n    backgroundColor:\"#fefcfb\"\r\n    \r\n  },\r\n  headBG: {\r\n      backgroundColor: '#e0e0e0'\r\n  },\r\n  borderRight500: {\r\n      borderRight: '1px solid #e0e0e0'\r\n  },\r\n  messageArea: {\r\n    height: '70vh',\r\n    overflowY: 'scroll',\r\n    // overflowY: \"scroll\",\r\n    minWidth: 0, minHeight: 0,\r\n    backgroundImage: 'url(\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcThbLauEsjimWluP7tzvqa3hDJI74bsdjvG13bhAVvQQiUYcLTFCWqqOOKUHpjbiUUek-k&usqp=CAU\")',\r\n    \r\n  },\r\n  chatBoxTop :{\r\n    height: \"100%\",\r\n    overflowY: \"scroll\",\r\n    paddingRight: \"10\",\r\n  },\r\n  \r\n  chatBoxBottom :{\r\n    marginTop: \"5\",\r\n    // display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  chatOnlineBadge :{\r\n    width: \"10px\",\r\n    height: \"10px\",\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"limegreen\",\r\n    position: \"absolute\",\r\n    top: \"2px\",\r\n    right: \"2px\",\r\n  }\r\n}));\r\n\r\nconst MyChat = () => {\r\n  const classes = useStyles();\r\n  const socket = useRef();\r\n  const scrollRef = useRef();\r\n  const [currentUser,setCurrentUser]=useState([]);\r\n  const [receiverId,setReciverId]=useState([]);\r\n  const [messages,setMessages]=useState([]);\r\n  const [users,setUsers]=useState([]);\r\n  const [arrivalMessage,setArrivalMessage]=useState([]);\r\n  const [newMessage,setNewMessage]=useState([]);\r\n  const [selected,setSelected]=useState([]);\r\n  let userId=sessionStorage.getItem(\"id\")\r\n  \r\n  useEffect(() => {\r\n    let unmounted = false;\r\n    socket.current = io(\"ws://localhost:8900\");\r\n    socket.current.on(\"getMessage\", (data) => {\r\n        setArrivalMessage({\r\n            sender: data.senderId,\r\n            text: data.text,\r\n            date: Date.now(),\r\n        });\r\n      return () => { unmounted = true };\r\n    });\r\n    socket.current.emit(\"addUser\", userId);\r\n    socket.current.emit(\"readMessages\");\r\n    socket.current.on(\"getUsers\", (onlineUsers) => {\r\n\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getFriends = async () => {\r\n      $.ajax({\r\n        type: \"GET\",\r\n        url: \"http://localhost:8080/users/friends/\" + userId,\r\n      \r\n      }).done(function(res) {\r\n        console.log(res.data)\r\n        setUsers(res.data);\r\n        handleClickOnUser(res.data[0].id)\r\n        })\r\n        .fail(function(jqXhr) {\r\n          console.log(\"cant find user by Id !!\");\r\n      }) \r\n    };\r\n\r\n    getFriends();\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    $.ajax({\r\n        type: \"POST\",\r\n        url: \"http://localhost:8080/users/getUserById\",\r\n        data: {id:userId},\r\n      \r\n      }).done(function(user) {\r\n        setCurrentUser(user.user)\r\n        })\r\n        .fail(function(jqXhr) {\r\n          console.log(\"cant find user by Id !!\");\r\n      }) \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let unmounted = false;\r\n\r\n    arrivalMessage &&\r\n    receiverId==arrivalMessage.sender &&\r\n      setMessages([...messages,arrivalMessage])\r\n    return () => { unmounted = true };\r\n  }, [arrivalMessage, receiverId]);\r\n\r\n\r\n  const handleClickOnUser=( userId)=> {\r\n      //set reciver id \r\n      setReciverId(userId)\r\n      setMessages([])\r\n      //get from data base the converstaion!\r\n      $.ajax({\r\n        type: \"POST\",\r\n        url: \"http://localhost:8080/Listmessages\",\r\n        data: {receiverId:sessionStorage.getItem(\"id\"), contactId:userId}\r\n      \r\n      }).done(function(fetchData) {\r\n        setMessages(fetchData.data)\r\n        //change color of coponenet\r\n        document.getElementById(userId).style.backgroundColor=\"gray\";\r\n        if(selected.length!=0)\r\n        { selected.style.backgroundColor=\"#fefcfb\"}\r\n        setSelected(document.getElementById(userId));\r\n        })\r\n        .fail(function(jqXhr) {\r\n          console.log(\"cant get messages !!\");\r\n      }) \r\n\r\n  \r\n  }\r\n \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const message = {\r\n      sender: userId,\r\n      receiver:receiverId,\r\n      text: newMessage,\r\n      date:Date.now(),\r\n    };\r\n    socket.current.emit(\"sendMessage\", {\r\n      senderId: userId,\r\n      receiverId:receiverId,\r\n      text: newMessage,\r\n    });\r\n\r\n    try {\r\n      $.ajax({\r\n        type: \"POST\",\r\n        url: \"http://localhost:8080/messages\",\r\n        data:message,\r\n      \r\n      }).done(function(res) {\r\n        setMessages([...messages, message]);\r\n        setNewMessage(\"\");\r\n        })\r\n        .fail(function(jqXhr) {\r\n          console.log(\"cant find user by Id !!\");\r\n      }) \r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const theme = createMuiTheme({\r\n    overrides: {\r\n      MuiTableRow: {\r\n        \"&$selected\": {\r\n          backgroundColor: 'red'\r\n        }\r\n      },\r\n   }\r\n  })\r\n\r\n\r\n\r\n  return (\r\n      <div >\r\n        <Grid container >\r\n            <Grid item xs={12} >\r\n                <Typography variant=\"h5\" style={{fontFamily:\"cursive\", marginLeft:theme.spacing(70), fontSize:\"2.8rem\"}}>Chat</Typography>\r\n            </Grid>\r\n        </Grid>\r\n        <Grid container component={Paper} className={classes.chatSection}>\r\n            <Grid item xs={3} className={classes.borderRight500}>\r\n                {currentUser !=null && <List>\r\n                    <ListItem button key={currentUser.id} >\r\n                        <ListItemIcon>\r\n                        <Avatar alt=\"Remy Sharp\" src={currentUser.img} style={{height:theme.spacing(6), width: theme.spacing(6)}}/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={currentUser.name}></ListItemText>\r\n                    </ListItem>\r\n                </List> }\r\n                <Divider />\r\n                <Divider />\r\n                <List>\r\n                    {users.map(user=>(\r\n                        <List>\r\n                        <ListItem  button key={user.id} id={user.id} onClick={() => handleClickOnUser(user.id)}>\r\n                            <ListItemIcon>\r\n                            <Avatar alt=\"Remy Sharp\" src={user.img} style={{height:theme.spacing(6), width: theme.spacing(6)}} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={user.username}></ListItemText>\r\n                            {user.online==true && <div className={classes.chatOnlineBadge}></div>}\r\n                        </ListItem>\r\n                        </List>\r\n                    ))}\r\n                  \r\n                </List>\r\n            </Grid>\r\n            <Grid item xs={9} style={{display:\"flex\",   flexDirection:\"column\",minWidth: 0, minHeight: 0}}>\r\n            <List className={classes.messageArea}>\r\n                {messages.map(message=>(\r\n                    <ListItem key={new Date(message.date).toLocaleDateString('en-GB')}  >\r\n                        <Grid container >\r\n                            <Grid item xs={12} >\r\n                                <ListItemText  align={message.sender==currentUser.id?\"right\":\"left\"} primary={message.text}></ListItemText>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <ListItemText align={message.sender==currentUser.id?\"right\":\"left\"} secondary={new Date(message.date).toLocaleDateString('en-GB')}></ListItemText>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ListItem>\r\n              \r\n                // <br/>\r\n                // </div>\r\n\r\n             ))}\r\n               </List> \r\n                <Divider />\r\n                <Grid container style={{padding: '10px',alignContent:\"flex-end\",justifyContent: \"flex-end\"}}>\r\n                    <Grid item xs={11}>\r\n                        <TextField id=\"outlined-basic-email\" label=\"Type Something\" onChange={(e) => setNewMessage(e.target.value)} value={newMessage} fullWidth />\r\n                    </Grid>\r\n                    <Grid xs={1} align=\"right\">\r\n                        <Fab color=\"primary\" aria-label=\"add\"><SendIcon onClick={handleSubmit} /></Fab>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default MyChat;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}